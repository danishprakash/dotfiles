#!/usr/bin/env bash

# ==============================================================================
# Rofi Tmux Session Switcher
# ==============================================================================
#
# Seamless tmux session switching integrated with rofi combi mode.
# Allows switching between tmux sessions from anywhere in the desktop environment.
#
# ARCHITECTURE:
#
# ┌─────────────────────────────────────────────────────────────────┐
# │                        i3 Window Manager                        │
# ├─────────────────────────────────────────────────────────────────┤
# │  Keybinding: mod+space → rofi combi (includes tmux mode)        │
# └──────────────────────────────────┬──────────────────────────────┘
#                                    │
#                                    ▼
# ┌─────────────────────────────────────────────────────────────────┐
# │                    rofi-tmux-switcher                           │
# ├─────────────────────────────────────────────────────────────────┤
# │                                                                 │
# │  Protocol Implementation:                                       │
# │  • No args     → Return tmux session list                       │
# │  • With arg    → Switch to selected session                     │
# │                                                                 │
# │  Logic Flow:                                                    │
# │  1. get_existing_sessions() → tmux list-sessions                │
# │  2. rofi displays sessions in combi mode                        │
# │  3. user selects session                                        │
# │  4. tmux switch-client -c <client> -t <session>                 │
# │  5. xdotool windowactivate <alacritty_window>                   │
# └─────────────────────────────────────────────────────────────────┘
#                                    │
#                                    ▼
# ┌─────────────────────────────────────────────────────────────────┐
# │                    System Integration                           │
# ├─────────────────────────────────────────────────────────────────┤
# │                                                                 │
# │  ┌─────────────────┐  ┌──────────────────┐  ┌─────────────────┐ │
# │  │      Tmux       │  │      Rofi        │  │    Xdotool      │ │
# │  │                 │  │                  │  │                 │ │
# │  │ • list-clients  │  │ • Combi mode     │  │ • Window focus  │ │
# │  │ • switch-client │  │ • Script protocol│  │ • windowactivate│ │
# │  │ • list-sessions │  │ • User selection │  │ • search --class│ │
# │  └─────────────────┘  └──────────────────┘  └─────────────────┘ │
# └─────────────────────────────────────────────────────────────────┘
#                                    │
#                                    ▼
# ┌─────────────────────────────────────────────────────────────────┐
# │                      Target Result                              │
# ├─────────────────────────────────────────────────────────────────┤
# │                    ┌─────────────────┐                          │
# │                    │    Alacritty    │                          │
# │                    │   (focused)     │                          │
# │                    │  ┌─────────────┐│                          │
# │                    │  │    Tmux     ││                          │
# │                    │  │   Session   ││                          │
# │                    │  │  (switched) ││                          │
# │                    │  └─────────────┘│                          │
# │                    └─────────────────┘                          │
# └─────────────────────────────────────────────────────────────────┘
#
# KEY FEATURES:
# • Works from any application (browser, editor, etc.)
# • No keyboard simulation - uses tmux client communication
# • Automatically focuses terminal after switching
# • Integrates seamlessly with rofi's combined interface
#
# USAGE:
# Add to i3 config:
# bindsym $mod+space exec "rofi -modi 'tmux:/path/to/rofi-tmux-switcher' -show combi -combi-modes 'window,drun,tmux'"
#
# ==============================================================================

get_git_projects() {
    {
        awk -F'|' '$1 ~ /^\/home\/[^\/]+\/code\// {
            split($1, parts, "/");
            basename = parts[length(parts)];
            print basename "|" $1 "|" $2
        }' ~/.z | \
        while IFS='|' read -r basename fullpath score; do
            if [ -d "$fullpath/.git" ]; then
                echo "$basename"
            fi
        done
        echo "obs"
    } | sort -u
}

get_existing_sessions() {
    tmux list-sessions -F "#{session_name}" 2>/dev/null | sort
}

create_dev_session() {
    local session_name="$1"
    local normalized_name=$(echo "$session_name" | sed 's/\./_/g')
    local project_dir

    if [ "$session_name" = "obs" ]; then
        project_dir="/home/danishprakash/code/obs"
    else
        project_dir=$(awk -F'|' -v name="$session_name" '
            $1 ~ /^\/home\/[^\/]+\/code\// {
                split($1, parts, "/");
                basename = parts[length(parts)];
                if (basename == name) { print $2 "|" $1 }
            }' ~/.z | sort -nr | head -1 | cut -d'|' -f2)
    fi

    if [ -n "$project_dir" ] && [ -d "$project_dir" ]; then
        cd "$project_dir"
        tmux new-session -d -s "$normalized_name"
        
        if [ "$session_name" = "obs" ]; then
            tmux split-window -h -p 25 -t "$normalized_name"
            sleep 0.5
            tmux send-keys -t "$normalized_name.0" "clear" C-m
            tmux send-keys -t "$normalized_name.1" "claude" C-m
            tmux select-pane -t "$normalized_name.0"
        else
            tmux split-window -h -p 25 -t "$normalized_name"
            tmux split-window -v -t "$normalized_name"
            sleep 0.5
            tmux send-keys -t "$normalized_name.0" "nvim" C-m
            tmux send-keys -t "$normalized_name.1" "claude" C-m
            tmux send-keys -t "$normalized_name.2" "clear" C-m
            tmux select-pane -t "$normalized_name.0"
        fi
    fi
}

if [ "$1" = "" ]; then
    # Combine existing sessions and git projects, mark existing sessions with prefix
    {
        get_existing_sessions | sed 's/^/* /'
        get_git_projects | while read -r project; do
            if ! tmux has-session -t "$project" 2>/dev/null; then
                echo "$project"
            fi
        done
    } | sort
elif [ "$1" != "" ]; then
    # Handle selection - clean the name and switch/create session
    selection="$1"
    session_name=$(echo "$selection" | sed 's/^\* //')
    # Convert dots to underscores to match tmux's session name normalization
    normalized_session_name=$(echo "$session_name" | sed 's/\./_/g')

    # Check if session exists, if not create it
    if ! tmux has-session -t "$normalized_session_name" 2>/dev/null; then
        create_dev_session "$session_name"
    fi

    # Find active tmux clients and switch them to the selected session
    tmux_clients=$(tmux list-clients -F "#{client_name}" 2>/dev/null)

    if [ -n "$tmux_clients" ]; then
        # Switch the first client to the selected session
        first_client=$(echo "$tmux_clients" | head -1)
        tmux switch-client -c "$first_client" -t "$normalized_session_name"

        # Focus alacritty window after switching using window ID
        # Useful for when you're on another workspace and you want
        # to switch to a specific tmux session, so it doesn't really
        # matter now where you invoke this script--rofi from.
        alacritty_id=$(xdotool search --class "Alacritty" | head -1)
        if [ -n "$alacritty_id" ]; then
            xdotool windowactivate "$alacritty_id"
        fi
    else
        # No active clients, try to attach in a new alacritty
        alacritty -e tmux attach-session -t "$normalized_session_name" &
    fi

    # Close rofi after selection
    exit 0
fi